# Your workflow name.
name: Deploy to Digital Ocean.

# Run workflow on every push to develop.
on:
  push:
    branches: [develop]

# Your workflows jobs.
jobs:


  flake8:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Lint with flake8
        run: |
          pip install flake8 flake8-html
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          mkdir -p reports/flake8
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=79 --statistics --format=html --htmldir=reports/flake8
      - name: Archive flake8 coverage results
        uses: actions/upload-artifact@v1
        with:
          name: flake8-coverage-report
          path: reports/flake8/

  pytest:
    name: Unit Testing
    needs: flake8
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r shift2go_api/requirements.txt
      - name: Test with pytest
        run: |
          docker-compose -f local-compose.yml up -d
          sleep 20;
#          docker-compose -f local-compose.yml run backend pytest $@
        continue-on-error: true

  build:
    name: Build and Push to digital ocean registry
    runs-on: ubuntu-latest
    needs: pytest
    steps:
      - name: Deploy package to digitalocean
        uses: appleboy/ssh-action@master
        env:
          GITHUB_USERNAME: ${{ secrets.GITHUB_USERNAME }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          envs: GITHUB_USERNAME, GITHUB_TOKEN
          script: |
            apt-get upgrade -y
            cd /etc/shift2go/gitRepo
            cd shift2go
            git checkout develop
            git pull
            docker-compose -f local-compose.yml up --force-recreate --build -d
            docker image prune -f
